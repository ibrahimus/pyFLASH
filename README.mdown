#pyflash.py Manual

**Currently only works with paired-end reads.**

##What does it do?
This script starts with fastq files out of an Illumina machine. There are pre-saved barcode schemes for:

1. FLASH
2. uvCLAP
3. iCLIP

Users can define their own barcoding scheme with the option -ub.

Then the script:

1. Merges paired-end reads with BBMerge
2. Splits the reads according to the internal indices provided as a fasta file while removing the index
3. Concurrent with (2) uses a binary, semi-random index, if avaliable, for replicate separation 
4. Concurrrent with (2) and (3) merges the semi-random nucleotides and random barcode and writes them to the header in the fastq file generated for later use.
5. If the --mapping option is used, fastq files are mapped to the genome of interest
6. The generated .bam files is processed with bamcleaner.py, which removes PCR duplicates by making use of the random barcode and mapping position
7. If bowtie2 + BBMap is used for mapping, merges the .bam files generated by these aligners
8. If specified (-mr), replicates are merged and saved as a copy, originals are kept
9. Bunch of coverage files are generated. bam_coverage is just coverage as we know it, and x_links contain the coverage for the -1 nucleotide of mapped reads, which are supposedly cross-linking points.

##pyflash.py needs some stuff to run:

1. python-Levenshtein package, available through pip
2. bamcleaner.py, that has to be kept within the same folder as pyflash.py
3. samtools, bedtools, bamtools
4. The BBTools suite. http://sourceforge.net/projects/bbmap/. You have to set the path to BBMap with the variable BBMAP_PATH in the script.
5. bowtie2 and/or hisat2 have to be executable.
6. bedGraphToBigWig has to be executable. http://hgdownload.cse.ucsc.edu/admin/exe/ and select your OS to get the correct binary
7. Finally, the genome indices and chromsome sizes have to be filled in. Change the dictionary "indices" as necessary. With BBMap, you just need a build number. Create indices with bbmap.sh ref=genome.fa build=1 and use that build number.

##FAQ:

###1. Why BBTools?

Because they are great.

###2. Why paired-end reads?

That's just the way we do it.

###3. Why merge paired-end reads?

Error correction, and it is easier to use single-end files. Don't ask why we just don't do single-end sequencing.

###4. Which aligner is the best?

I don't know. I'm happy with the default bowtie2 + BBMap. BBMap, bowtie2 or HISAT2 alone also works. Depends on what you want, and what kind of data you have.

###5. Why should I use this?

You don't have to.

###6. Will there be more options?

Probably.

###7. Why does your code look like crap?

I'm not a programmer that's why.